<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.openpcm</groupId>
		<artifactId>openpcm-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>openpcm-service</artifactId>
	<name>OpenPM Service</name>

	<dependencies>
		<!-- Spring Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Swagger Dependencies -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger-version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger-version}</version>
		</dependency>

		<!-- Testing Dependencies -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy Vue.js frontend content</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>src/main/resources/public</outputDirectory>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<directory>${project.parent.basedir}/openpcm-vuejs/target/dist</directory>
									<includes>
										<include>static/</include>
										<include>index.html</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.kongchen</groupId>
				<artifactId>swagger-maven-plugin</artifactId>
				<version>${swagger-maven-plugin-version}</version>
				<configuration>
					<!--CHECK HERE FOR MORE CONFIG OPTIONS: https://github.com/kongchen/swagger-maven-plugin/blob/master/README.md -->
					<apiSources>
						<apiSource>
							<springmvc>true</springmvc>
							<host>HOST:PORT</host>
							<basePath>/api/v1/openpcm</basePath>
							<locations>
								<location>org.openpcm</location>
							</locations>
							<schemes>
								<scheme>http</scheme>
							</schemes>
							<info>
								<title>OpenPM REST API</title>
								<version>${project.version}</version>
								<description>
									Rest API for OpenPCM
								</description>
								<contact>
									<email>gsugambit@gmail.com</email>
									<name>Raymond King</name>
									<url>https://github.com/gsugambit/openpcm/issues</url>
								</contact>
								<termsOfService>
									https://google.com
								</termsOfService>
							</info>
							<templatePath>${basedir}/src/main/resources/templates/strapdown.html.hbs</templatePath>
							<outputPath>${basedir}/target/restapi/OpenPCM_REST_API.html</outputPath>
							<swaggerDirectory>${basedir}/target/swagger/generated/swagger-ui</swaggerDirectory>
						</apiSource>
					</apiSources>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jolokia</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.13.7</version>
					<configuration>
						<images>
							<image>
								<alias>${project.artifactId}</alias>
								<name>${docker.registry.ip}:${docker.registry.port}/gsugambit/${project.artifactId}:${docker.tag}</name>
								<build>
									<from>java:9-jdk</from>
									<maintainer>${user.name}</maintainer>
									<assembly>
										<basedir>/</basedir>
										<descriptor>${project.build.outputDirectory}/docker/assembly.xml</descriptor>
									</assembly>
									<env>
									</env>
									<workdir>/${project.artifactId}</workdir>
									<entryPoint>
										<exec>
											<args>./entrypoint.sh</args>
										</exec>
									</entryPoint>
								</build>
								<run>
								</run>
							</image>
						</images>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
					<executions>
						<execution>
							<id>copy-resources</id>
							<!-- here the phase you need -->
							<phase>validate</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${basedir}/target/classes</outputDirectory>
								<resources>
									<resource>
										<directory>../../</directory>
										<includes>
											<include>*LICENSE</include>
										</includes>
										<excludes>
											<exclude>openpcm-parent/*</exclude>
										</excludes>
										<filtering>false</filtering>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>dockerize</id>
			<activation>
				<property>
					<name>dockerize</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jolokia</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-docker-images</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>push-docker-images</id>
								<phase>install</phase>
								<goals>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>docker-start</id>
			<activation>
				<property>
					<name>docker-start</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jolokia</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-docker-images</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>docker-stop</id>
			<activation>
				<property>
					<name>docker-stop</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jolokia</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-docker-images</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>docker-clean</id>
			<activation>
				<property>
					<name>docker-clean</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jolokia</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-docker-images</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>stop</goal>
									<goal>remove</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>